#!/usr/bin/env php
<?php
/**
 * BEAR/Sunday API Doc generator
 *
 * Usage: bear.apidoc \'MyVendor\MyProject\' prod-html-app /path/to/project
 */
use BEAR\ApiDoc\DocGen;
use BEAR\ApiDoc\MarkdownTemplate;
use BEAR\AppMeta\Exception\AppNameException;
use Koriym\Alps\Alps;
use Koriym\Alps\NullAlps;
use Symfony\Component\DependencyInjection\Alias;

if ($argc !== 4 && $argc !== 5) {
    echo 'usage: bear.apidoc <MyVendor\MyProject> </path/to/app_dir> <path/to/doc_dir> [alps_file]' . PHP_EOL;
    exit(1);
}
[, $appName, $appDir, $docDir] = $argv;
$autoload = $appDir . '/vendor/autoload.php';
if (! file_exists($autoload)) {
    throw new InvalidArgumentException($autoload);
}
require $autoload;

if (! file_exists($docDir) || ! is_writable($docDir)) {
    throw new InvalidArgumentException(sprintf('[%s]: invalid documentation directory', $docDir));
}

$alpsFile = realpath($argv[4]);
$alps = ($argc === 5) ? new Alps($alpsFile) : new NullAlps;

try {
    echo (new DocGen)($appName, realpath($docDir), 'app', MarkdownTemplate::class, $alps);
    exit(0);
} catch (AppNameException $e) {
    throw new InvalidArgumentException(sprintf('[%s]: invalid application name (ex. "Vendor\Project"', $e->getMessage()));
} catch (\Exception $e) {
    error_log((string) $e);
    exit(1);
}
